@using DWNet.Data;
@using SnapObjects.Data;
@using Appeon.DataStoreDemo.SqlServer;
@using System.Net.Http
@inject HttpClient Http

<h3>SalesOrder_DetailView</h3>
<D_Order_Header_Free_View DW_Master="@DW_Master" Customers="@Customers"/>
@if (DW_Order_Details == null)
{
    <p>Loading...</p>
}
else
{
    <D_Order_Detail_List_View DW_Order_Details="@DW_Order_Details" Products="@Products"/>
}


<DxButton Click="@OnBackClick" Text="Back"/>

@code {
    [Parameter]
    public D_Order_Header_Grid DW_Master { get; set; }

    [Parameter]
    public IDataStore<D_Dddw_Order_Production> Products { get; set; }

    [Parameter]
    public IDataStore<D_Dddw_Customer_Individual> Customers { get; set; }


    IDataStore<D_Order_Detail_List> DW_Order_Details;

    [Parameter]
    public EventCallback<MouseEventArgs> OnClickCallback { get; set; }

    protected override async Task OnInitializedAsync()
    {
        string salesOrderId = DW_Master.Salesorderid.ToString();
        string customerId = DW_Master.Customerid.ToString();
        var response = await Http.GetAsync($"http://localhost:16561/api/SalesOrder/RetrieveSaleOrderDetail/{salesOrderId}/{customerId}");
        response.EnsureSuccessStatusCode();
        string json = await response.Content.ReadAsStringAsync();
        IDataUnpacker unPacker = new DataUnpacker(json, DataFormat.Json);
        DW_Order_Details = new DataStore<D_Order_Detail_List>();
        string json2 = unPacker.GetValue<string>("SalesOrderDetail");
        DW_Order_Details.ImportJson(json2);
    }

    void OnBackClick(MouseEventArgs args)
    {
        OnClickCallback.InvokeAsync(args);
    }
}